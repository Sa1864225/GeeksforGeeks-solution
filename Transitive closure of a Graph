#User function Template for python3

class Solution:
    def transitiveClosure(self, N, graph):
        
        reach = [[0] * N for _ in range(N)]
        
        # Initialize reach matrix with the given graph
        a=0
        for i in range(N):
            for j in range(N):
                if i==j:
                    graph[i][j]=1
                reach[i][j] = graph[i][j]
                
        # Floyd-Warshall algorithm
        for k in range(N):
            for i in range(N):
                for j in range(N):
                    reach[i][j] = reach[i][j] or (reach[i][k] and reach[k][j])
        
        return reach
